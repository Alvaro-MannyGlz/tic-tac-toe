# Use the provided images and a Python GUI library of your choice to create a simple Tic-tac-toe game.
# Tkinter library

import tkinter as tk

root = tk.Tk()
root.title("Tic-Tac-Toe")
curr_player = "X"
board = [["" for _ in range(3)] for _ in range(3)] # 3x3 Board size
game_buttons = [] # store cell objects

# Win and Tie Conditions

def check_win():
    # Horizontal win
    for row in range(3):
        if board[row][0] == board[row][1] == board[row][2] != "":
            return True
    # Vertical win
    for col in range(3):
        if board[col][0] == board[col][1] == board[col][2] != "":
            return True
    # Diagonal 
    if board[0][0] == board[1][1] == board[2][2] != "":
        return True
    if board[0][2] == board[1][1] == board[2][0] != "":
        return True
    return False

def check_tie():
    for row in range(3):
        for col in range(3):
            if board[row][col] == "":
                return False
    return True

# Cell Class
def __init__(self, master, row, col):
    super().__init__(master, text="", font=("Arial", 40), width=4, height=2)
    self.row = row
    self.col = col
    self.bind("<Button-1>", self.flip) # Cell will handle click
    
    def flip(self, event):
        global curr_player

        # Cells are empty
        if board[self.row][self.col] == "":
            # Cell will change from blank to X or O
            board[self.row][self.col] = curr_player
            self.config(text=curr_player)

            if check_win():
                messagebox.showinfo("Game Over", f"Player {curr_player} wins!") 
                reset_game()      

# Build our buttons
buttons = []
for row in range(3):
    button_row = []
    for col in range(3):
        button = tk.Button(root, text="", font=("Arial", 20))
        button.grid(row=row, column=col, padx=5, pady=10) # Adjusting where buttons are located 
        button_row.append(button)
    buttons.append(button_row)

# Run the whole thing
root.mainloop()